<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>陈剑的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-02-05T10:48:09.073Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>陈剑</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>05JavaScript基础学习</title>
    <link href="http://yoursite.com/2020/02/05/05JavaScript%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2020/02/05/05JavaScript%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-02-05T09:37:38.000Z</published>
    <updated>2020-02-05T10:48:09.073Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要：JavaScript，1995年由Brendan Eich设计产生，仅用时10天，网景公司想借Java的名气火一把，取名JavaScript ……</p></blockquote><a id="more"></a><h4 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h4><ol><li>变量本质是一个盒子，盒子里面记载着对象的内存地址，变量的意义就是方便我们去操作对象。</li></ol><ul><li>变量命名规范：<ul><li>可以由字母(<code>a-zA-Z</code>)，数字(<code>0-9</code>)，下划线(<code>_</code>)以及美元符号(<code>$</code>)组成</li><li>不能由数字开头</li><li>命名尽量用英文并且具有一定的含义</li><li>如果有多个英文单词, 后面单词的首字母大写</li><li>不能使用关键字</li><li>首字母不要大写，大写是有特殊含义的</li></ul></li></ul><ol start="2"><li>JavaScript的数据类型<ul><li>字符串(<code>String</code>)：比如”Hello World”；</li><li>数字(<code>Number</code>)：整数和浮点数；</li><li>布尔(<code>Boolean</code>)：true 和 false；</li><li><code>Null</code>: 表示空缺，即此处应该有一个值，但目前为空；</li><li><code>Undefined</code>: 表示未定义或不存在，即此处目前没有任何值；</li><li><code>Symbol</code>：Symbol 是 ES6 引入了一种新的原始数据类型，表示独一无二的值；</li><li>对象（<code>object</code>）：各种值组成的集合。</li><li>数组（<code>array</code>）：数组类型</li><li>函数（<code>function</code>）：函数数据类型</li></ul></li></ol><h4 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h4><ol><li>JavaScript严格区分大小写。</li><li>JavaScript不区分整数和浮点数，统一用Number表示，以下表示都合法：</li></ol><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; 123; // 整数123</span><br><span class="line">&gt; 0.456; // 浮点数0.456</span><br><span class="line">&gt; 1.2345e3; // 科学计数法表示1.2345x1000，等同于1234.5</span><br><span class="line">&gt; -99; // 负数</span><br><span class="line">&gt; NaN; // NaN表示Not a Number，当无法计算结果时用NaN表示</span><br><span class="line">&gt; Infinity; // Infinity表示无限大，当数值超过了JavaScript的Number所能表示的最大值时，就表示为Infinity</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><ol start="3"><li><p>关于相等运算符<code>==</code>。JavaScript在设计时，有两种比较运算符：</p><ul><li><p>第一种是<code>==</code>比较，它会自动转换数据类型再比较，很多时候，会得到非常诡异的结果；</p></li><li><p>第二种是<code>===</code>比较，它不会自动转换数据类型，如果数据类型不一致，返回<code>false</code>，如果一致，再比较。</p></li></ul><p>所以在进行比较的时候不要使用<code>==</code>比较，始终坚持使用<code>===</code>比较。</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;摘要：JavaScript，1995年由Brendan Eich设计产生，仅用时10天，网景公司想借Java的名气火一把，取名JavaScript ……&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="毕业设计" scheme="http://yoursite.com/categories/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="学习笔记" scheme="http://yoursite.com/categories/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="毕业设计" scheme="http://yoursite.com/tags/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="JavaScript学习笔记" scheme="http://yoursite.com/tags/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>04服务端功能完成总结</title>
    <link href="http://yoursite.com/2020/02/04/04%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%8A%9F%E8%83%BD%E5%AE%8C%E6%88%90%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2020/02/04/04%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%8A%9F%E8%83%BD%E5%AE%8C%E6%88%90%E6%80%BB%E7%BB%93/</id>
    <published>2020-02-04T09:39:54.000Z</published>
    <updated>2020-02-04T11:10:05.033Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要：这几天学习Django框架主要用于完成后台管理功能，因为后台比较简单，就是普通网上商城管理员对用户，商品以及订单的管理，所以边学边做，基本把后台管理的功能完成了，接下来一段时间主要做前台用户的功能和图案定制的核心功能。</p></blockquote><a id="more"></a><p><img src="/2020/02/04/04服务端功能完成总结/1.png" alt></p><p>这两天通过Django的学习简单实现了后台的功能，虽然做出来的demo比较简单，但是对Django的掌握确实提高了不少，现在把这中间遇到的问题总结一下：</p><h4 id="1-使用Django实现上传图片"><a href="#1-使用Django实现上传图片" class="headerlink" title="1. 使用Django实现上传图片"></a>1. 使用Django实现上传图片</h4><ul><li><p>首先在项目中创建一个app。例如 python manage.py startapp app1，然后将其加入到settings.py文件中。</p><p>  INSTALLED_APPS = [</p><pre><code>&apos;django.contrib.admin&apos;,&apos;django.contrib.auth&apos;,&apos;django.contrib.contenttypes&apos;,&apos;django.contrib.sessions&apos;,&apos;django.contrib.messages&apos;,&apos;django.contrib.staticfiles&apos;,&apos;app1&apos;,</code></pre><p>  ] </p></li></ul><ul><li>然后再数据库中建立保存图片的表。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IMG</span> <span class="params">( models.Model )</span> :</span></span><br><span class="line">  img = models.ImageField ( upload_to = <span class="string">'img'</span> )</span><br><span class="line">  name = models.CharField ( max_length = <span class="number">20</span> )</span><br></pre></td></tr></table></figure><p>代码中的upload_to指的是图片存储的文件夹名称，上传图片之后会自动创建。</p><ul><li>修改settings.py文件</li></ul><p>在settings.py文件后面加上两行代码：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#设置静态文件路径为主目录下的media文件夹</span><br><span class="line">MEDIA_ROOT = os.path.join(BASE_DIR, 'media').replace('\\', '/')    </span><br><span class="line">#url映射</span><br><span class="line">MEDIA_URL = '/media/'</span><br></pre></td></tr></table></figure><ul><li>创建模板</li></ul><p>在templates文件下创建一个文件（最好是我们的app的名字，以此来把页面按app分开），比如叫app1，然后在app1文件下创建uploading.html页面：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"POST"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">        &#123;% csrf_token %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"img"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span>上传<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>以及用于图片展示的showing.html页面：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    &#123;% for img in imgs %&#125;</span><br><span class="line">         <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; img.img.url &#125;&#125;"</span> /&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>创建视图函数</li></ul><p>view.py：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> app1.models <span class="keyword">import</span> IMG</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">uploadImg</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    图片上传</span></span><br><span class="line"><span class="string">    :param request: </span></span><br><span class="line"><span class="string">    :return: </span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        new_img = IMG(</span><br><span class="line">            img=request.FILES.get(<span class="string">'img'</span>),</span><br><span class="line">            name = request.FILES.get(<span class="string">'img'</span>).name</span><br><span class="line">        )</span><br><span class="line">        new_img.save()</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">'app1/uploading.html'</span>)</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">showImg</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    图片显示</span></span><br><span class="line"><span class="string">    :param request: </span></span><br><span class="line"><span class="string">    :return: </span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    imgs = IMG.objects.all()</span><br><span class="line">    content = &#123;</span><br><span class="line">        <span class="string">'imgs'</span>:imgs,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> imgs:</span><br><span class="line">        <span class="keyword">print</span> (i.img.url)</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'app1/showing.html'</span>,content)</span><br></pre></td></tr></table></figure><ul><li>配置urls.py</li></ul><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">urlpatterns = [</span></span><br><span class="line"><span class="xml">    path('admin/', admin.site.urls),</span></span><br><span class="line"><span class="xml">    url(r'^upload', views.uploadImg),</span></span><br><span class="line"><span class="xml">    url(r'^show', views.showImg),</span></span><br><span class="line"><span class="xml">] + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)</span></span><br></pre></td></tr></table></figure><h4 id="2-Django表单的一些注意点"><a href="#2-Django表单的一些注意点" class="headerlink" title="2.Django表单的一些注意点"></a>2.Django表单的一些注意点</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/search-post"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span>        </span><br><span class="line">    &#123;% csrf_token %&#125;        </span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span>        </span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Submit"</span>&gt;</span>    </span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>form表单后面有一个csrf_token的标签。csrf 全称是 Cross Site Request Forgery。这是Django提供的防止伪装提交请求的功能。POST 方法提交的表格，必须有此标签。</p><h4 id="3-模板继承"><a href="#3-模板继承" class="headerlink" title="3.模板继承"></a>3.模板继承</h4><p>Django提供了特别好的HTML继承功能，在HTML中看到block和endblock标签，表示标签内部的内容可以供其他模板重载，只需要在其他模板中加入extends标签即可，如：</p><p>example.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt;示例&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;Hello World!&lt;/h1&gt;</span><br><span class="line">    &#123;% block mainbody %&#125;</span><br><span class="line">       &lt;p&gt;23333&lt;/p&gt;</span><br><span class="line">    &#123;% endblock %&#125;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>helloworld.html：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;%extends &quot;example.html&quot; %&#125;</span><br><span class="line"> </span><br><span class="line">&#123;% block mainbody %&#125;</span><br><span class="line">&lt;p&gt;此部分继承了 example.html 文件&lt;/p&gt;</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><p>打开helloworld.html文件即可看到example.html里面block标签内的内容被替换：</p><p><img src="/2020/02/04/04服务端功能完成总结/2.png" alt></p><p>这些是学习过程中特别注意到的一些点和遇到的几个问题，特别感谢<a href="https://www.runoob.com/" target="_blank" rel="noopener">菜鸟教程</a>，在上面学到了很多东西，明天开始做核心功能，主要是和用户交互部分和核心算法，接下来会主要学习一下JavaScript和Python。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;摘要：这几天学习Django框架主要用于完成后台管理功能，因为后台比较简单，就是普通网上商城管理员对用户，商品以及订单的管理，所以边学边做，基本把后台管理的功能完成了，接下来一段时间主要做前台用户的功能和图案定制的核心功能。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="毕业设计" scheme="http://yoursite.com/categories/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="毕业设计" scheme="http://yoursite.com/tags/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>03Django框架学习</title>
    <link href="http://yoursite.com/2020/02/03/03Django%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2020/02/03/03Django%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-02-03T10:49:30.000Z</published>
    <updated>2020-02-03T11:52:58.638Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要：Django框架是一个比较大型的框架，相较于flask等等。也正是因为Django的体量比较大，做很多功能有现成的方案，实现起来比较简单和方便，所以我在毕设当中采用了Django框架。</p></blockquote><a id="more"></a><p>在学校的时候虽然用Django框架做出来一部分功能和界面，但是我对于Django的理解还很停留在表面，想做出许多功能但是不知道在Django中如何进行操作。所以趁着假期对Django框架和Python语言进行一下深入的学习，这次的课程实在<a href="https://www.bilibili.com/" target="_blank" rel="noopener">哔哩哔哩</a>上找的<a href="https://www.bilibili.com/video/av45473851" target="_blank" rel="noopener">Django2.1框架教学</a>，虽然教学是关于Django框架的，但是还是学到了很多加深对软件开发理解性的东西，比如网站的层次概念，Django框架的MVT概念等等。</p><p><img src="/2020/02/03/03Django框架学习/1.png" alt="前后端分离网站层次图" title="前后端分离网站层次图"></p><p><img src="/2020/02/03/03Django框架学习/2.png" alt title="MVT框架"></p><p>Django通过MVT框架对前后端进行管理，即：</p><ul><li><p>Model（模型）用于和数据库进行交互</p></li><li><p>View（视图）用于接收请求，进行处理，与M和T进行交互，返回应答</p></li><li><p>Template（模板）用于产生HTML页面</p></li></ul><p>这样用户使用起来就方便了很多，对数据的管理交给框架就可以了，我们开发时候可以专注于功能，框架的方便性就体现了出来。</p><p>写的有些少，但是学到了很多，还是要多动手练习。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;摘要：Django框架是一个比较大型的框架，相较于flask等等。也正是因为Django的体量比较大，做很多功能有现成的方案，实现起来比较简单和方便，所以我在毕设当中采用了Django框架。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="毕业设计" scheme="http://yoursite.com/categories/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="毕业设计" scheme="http://yoursite.com/tags/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>02重新设计数据库</title>
    <link href="http://yoursite.com/2020/02/02/02%E9%87%8D%E6%96%B0%E8%AE%BE%E8%AE%A1%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>http://yoursite.com/2020/02/02/02%E9%87%8D%E6%96%B0%E8%AE%BE%E8%AE%A1%E6%95%B0%E6%8D%AE%E5%BA%93/</id>
    <published>2020-02-02T10:35:44.000Z</published>
    <updated>2020-02-03T03:43:42.323Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要：今天根着网上的一个实战项目类比发现我之前做的一些东西还不够完善，底层数据库的设计也很简单，只能是把简单的业务功能实现了，远远没有达到实际中的项目需要，尤其是管理员界面，离实际使用还有很大距离。</p></blockquote><a id="more"></a><p>管理界面在学习阶段是我们自己经常用的，我们作为研发人员知道自己想要什么，怎么使用。但是实际交付工作，管理端往往是交付给完全没有软件设计经验的管理人员使用，他们也需要像普通用户一样简单易懂的管理界面。因此要把后台也是值得更加精细化，便于管理员使用。</p><p><img src="/2020/02/02/02重新设计数据库/1.png" alt></p><p>这是我的网站首页，现在这个网站的轮播图只能通过修改代码和后台图片实现。通过网上学习项目，我第一次接触到后台管理可通过上传图片，指定某张具体的图片进行管理首页，当然也包括后面的销量图，活动图等等，这就需要管理端的数据库更加精细化，设计更多的表对需要指定的内容进行一一对应。所以我今天对照视频把自己的数据库进行了重新设计。加入了之前没有的对前端页面显示的管理，又增加了对产品的一些细节化管理，比如详情图片管理，简介管理等等。</p><p>之前对于管理端的理解比较简单，今天对管理端又有了重新的认识，管理端也是普通用户的一端，所有用户接触到的一端都应该设计的简单，方便，易用，易于理解。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;摘要：今天根着网上的一个实战项目类比发现我之前做的一些东西还不够完善，底层数据库的设计也很简单，只能是把简单的业务功能实现了，远远没有达到实际中的项目需要，尤其是管理员界面，离实际使用还有很大距离。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="毕业设计" scheme="http://yoursite.com/categories/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="毕业设计" scheme="http://yoursite.com/tags/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>01毕设学习进度记录</title>
    <link href="http://yoursite.com/2020/02/01/01%E6%AF%95%E8%AE%BE%E5%AD%A6%E4%B9%A0%E8%BF%9B%E5%BA%A6%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2020/02/01/01%E6%AF%95%E8%AE%BE%E5%AD%A6%E4%B9%A0%E8%BF%9B%E5%BA%A6%E8%AE%B0%E5%BD%95/</id>
    <published>2020-02-01T10:39:27.000Z</published>
    <updated>2020-02-03T06:04:30.665Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要：寒假期间毕业设计进度记录。主要用于督促自己毕业设计的进度，也是对自己这个过程的一个记录，方便以后回顾。</p></blockquote><a id="more"></a>  <p>寒假前几天学习了近一个星期Django框架，过年几天没有学习。</p><p>今天是年后第一天开始做毕设，Django框架学习起来比较简单，虽然Django框架很大，学习周期比较长，但是借助于Django模板的方便性，学习起来还是很快，尤其是连接数据库的简单让我很惊讶，从Java到Python再到Django，连接数据库越来越趋于简单，可能以后的编程会越来越趋于 “拼接” 这种方向。</p><p>接下来几天的计划都是对Django框架的学习，以及对毕设项目的完善，下面简单描述一下毕设项目。</p><hr><h3 id="毕设项目介绍"><a href="#毕设项目介绍" class="headerlink" title="毕设项目介绍"></a>毕设项目介绍</h3><p>项目名称：<strong>文化衫定制平台的设计与实现</strong></p><ol><li><p>设计要求</p><p>文化衫定制平台的设计与实现要求学生独立设计文化衫交流社区，基于在线交互模式实现文化衫个性化定制、发布、销售、交流和推荐等功能。</p><p>(1)系统要求开发工具采用 Pycharm + Android SDK + MySQL + Tomcat等。</p><p>(2)要求系统界面设计美观，交互友好，操作方便。</p></li><li><p>设计内容</p><p>文化衫定制平台的角色包括平台管理员、制造销售商、设计师和会员用户等，系统分别为管理员、制造销售商、设计师和会员提供如下功能：</p><p>(1)管理员、销售制造商、设计师和会员的信息管理功能。</p><p>(2)基于交互模式的文化衫图案在线设计功能，并提供侵权举报功能。</p><p>(3)提供文化衫定制、销售功能，并基于文化衫销售数据提供数据分析与定价推荐功能。</p><p>(4)提供制造销售商、设计师和会员用户的积分预等级管理功能。</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;摘要：寒假期间毕业设计进度记录。主要用于督促自己毕业设计的进度，也是对自己这个过程的一个记录，方便以后回顾。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="毕业设计" scheme="http://yoursite.com/categories/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="毕业设计" scheme="http://yoursite.com/tags/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>欢 迎</title>
    <link href="http://yoursite.com/2019/04/14/hello-world/"/>
    <id>http://yoursite.com/2019/04/14/hello-world/</id>
    <published>2019-04-14T02:34:44.993Z</published>
    <updated>2020-02-02T03:10:54.394Z</updated>
    
    <content type="html"><![CDATA[<center>print(“Hello World”)</center><br><center>欢迎，这是我的第一篇博客！</center>]]></content>
    
    <summary type="html">
    
      
      
        &lt;center&gt;print(“Hello World”)&lt;/center&gt;&lt;br&gt;&lt;center&gt;欢迎，这是我的第一篇博客！&lt;/center&gt;

      
    
    </summary>
    
    
    
  </entry>
  
</feed>
